一、atlas介绍

Atlas是由 Qihoo 360公司Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目。它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上，修改了大量bug，添加了很多功能特性。目前该项目在360公司内部得到了广泛应用，很多MySQL业务已经接入了Atlas平台，每天承载的读写请求数达几十亿条。

主要功能：
读写分离、从库负载均衡、自动分表、IP过滤

使用场景：
atlas是位于前端应以和后端数据库之间的中间件，作为客户端与数据库连接，同时对于前端应用来说，是一个服务端

二、其它中间件介绍
Mysql-proxy（oracle） 
Mysql-router（oracle） 
Atlas (Qihoo 360) 
Atlas-sharding (Qihoo 360) 
Cobar（是阿里巴巴（B2B）部门开发） 
Mycat（基于阿里开源的Cobar产品而研发） 
TDDL Smart Client的方式（淘宝） 
Oceanus(58同城数据库中间件) 
OneProxy（原支付宝首席架构师楼方鑫开发 ） 
vitess（谷歌开发的数据库中间件） 
Heisenberg(百度) 
TSharding(蘑菇街白辉) 
Xx-dbproxy（金山的Kingshard、当当网的sharding-jdbc ）

三、atlas部署
3.1 下载和安装
下载安装： 
wget https://github.com/Qihoo360/Atlas/releases/download/2.2.1/Atlas-2.2.1.el6.x86_64.rpm 
rpm -ivh Atlas-2.2.1.el6.x86_64.rpm

注意事项：
1、Atlas只能安装运行在64位的系统上 
2、Centos 5.X安装 Atlas-XX.el5.x86_64.rpm，Centos 6.X安装Atlas-XX.el6.x86_64.rpm。 
3、后端mysql版本应大于5.1，建议使用Mysql 5.6以上 
　　Atlas (普通) : Atlas-2.2.1.el6.x86_64.rpm 
　　Atlas (分表) : Atlas-sharding_1.0.1-el6.x86_64.rpm

3.2 配置文件
   1.配置文件说明
       安装之后会在”/usr/local/mysql-proxy”下生成4个文件夹，以及需要配置的文件，如下：
        [root@node2 ~]# ll /usr/local/mysql-proxy/
total 4
drwxr-xr-x. 2 root root   91 Jul  1 19:00 bin
drwxr-xr-x. 2 root root   29 Jul  1 16:13 conf
drwxr-xr-x. 3 root root 4096 Jul  1 16:00 lib
drwxr-xr-x. 2 root root   36 Jul  1 19:01 log

bin目录下放的都是可执行文件
encrypt是用来生成MySQL密码加密的，在配置的时候会用到
mysql-proxy是MySQL自己的读写分离代理
mysql-proxyd是360弄出来，服务的启动、重启、停止。都是用他来执行的
 
conf目录下放的是配置文件
test.cnf”只有一个文件，用来配置代理的，可以使用vim来编辑
 
lib目录下放的是一些包，以及Atlas的依赖
log目录下放的是日志，如报错等错误信息的记录

       
        前面设置了mysql的操作账户，那现在通过encrypt对密码进行加密
        [root@node2 ~]# /usr/local/mysql-proxy/bin/encrypt  test123
        
       复制密码串到配置文件； /usr/local/mysql-proxy/conf/test.cnf 


[mysql-proxy]
#带#号的为非必需的配置项目

#管理接口的用户名
admin-username=user

#管理接口的密码
admin-password=pwd

#Atlas后端连接的MySQL主库的IP和端口，可设置多项，用逗号分隔
proxy-backend-addresses=192.168.100.55:3306

#Atlas后端连接的MySQL从库的IP和端口，@后面的数字代表权重，用来作负载均衡，若省略则默认为1，可设置多项，用逗号分隔
proxy-read-only-backend-addresses=192.168.100.54:3306@2,192.168.100.53:3306@1

#用户名与其对应的加密过的MySQL密码，密码使用PREFIX/bin目录下的加密程序encrypt加密，下行的user1和user2为示例，将其替换为你的MySQL的用户名和加密密码！
pwds=root: 29uENYYsKLo= ,atlas:F81glGa2FGwa8s/oWZlMvQ==

#设置Atlas的运行方式，设为true时为守护进程方式，设为false时为前台方式，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。
daemon=true

#设置Atlas的运行方式，设为true时Atlas会启动两个进程，一个为monitor，一个为worker，monitor在worker意外退出后会自动将其重启，设为false时只有worker，没有monitor，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。
keepalive=true

#工作线程数，对Atlas的性能有很大影响，可根据情况适当设置
event-threads=8

#日志级别，分为message、warning、critical、error、debug五个级别
log-level=message

#日志存放的路径
log-path=/data/logs/mysql-proxy/log

#SQL日志的开关，可设置为OFF、ON、REALTIME，OFF代表不记录SQL日志，ON代表记录SQL日志，REALTIME代表记录SQL日志且实时写入磁盘，默认为OFF
#sql-log = OFF

#慢日志输出设置。当设置了该参数时，则日志只输出执行时间超过sql-log-slow（单位：ms)的日志记录。不设置该参数则输出全部日志。
#sql-log-slow = 10

#实例名称，用于同一台机器上多个Atlas实例间的区分
#instance = test

#Atlas监听的工作接口IP和端口
proxy-address=0.0.0.0:1234

#Atlas监听的管理接口IP和端口
admin-address=0.0.0.0:2345

#分表设置，此例中person为库名，mt为表名，id为分表字段，3为子表数量，可设置多项，以逗号分隔，若不分表则不需要设置该项
#tables = person.mt.id.3

#默认字符集，设置该项后客户端不再需要执行SET NAMES语句
charset=utf8

#允许连接Atlas的客户端的IP，可以是精确IP，也可以是IP段，以逗号分隔，若不设置该项则允许所有IP连接，否则只允许列表中的IP连接
client-ips=127.0.0.1,192.168.100.52

#Atlas前面挂接的LVS的物理网卡的IP(注意不是虚IP)，若有LVS且设置了client-ips则此项必须设置，否则可以不设置
#lvs-ips = 192.168.1.1

   3.3 启动atlas
       1、确认主库vip已绑定
       2、确认主从库完好，MySQL启动正常，并且防火墙已经关闭。
3、确认配置文件调试完毕
4、启动atlas：
./mysql-proxyd test start
  
   3.4 测试atlas
       1、查看端口运行状态
        
     
        两个端口都是配置文件里指定的端口
1234是工作端口，负责对外提供数据库读写服务的
2345端口是mysql-proxy管理端口
管理端口登录的用户名默认：user，默认密码：pwd

2.登录管理端口: 
mysql -h127.0.0.1 -uroot -p -P2345 
根据提示：use ‘SELECT * FROM help’ to see the supported commands 
输入SELECT * FROM help；
 

查看backend节点状态：SELECT * FROM backends;
 
关闭一个节点：set offline 2;
 

移除一个节点：remove backend 2;
 
保存配置：SAVE CONFIG;
添加一个节点：add slave 192.168.100.54:3306
 


3. 登录工作端口： 
mysql -h127.0.0.1 -uadmin -p -P1234 
输入admin密码进行登录，然后就可以查看一下数据库show databases; 
能否看到授权的数据库，不能看到的话重新授权admin用户。 
然后查询server_idshow variables like 'server_id';

再次查看show variables like 'server_id 说明负载均衡已经实现


3.5 网页测试
    确保配置文件已经添加web端地址，能够远程访问atlas的工作端口。我这里web程序搭建在234上。所以在234上进行测试登录atlas工作端口： 
主机234：mysql  -uadmin -p -P1234
如果不能连接请检查atlas配置文件配置的允许登录地址和俩机器的防火墙状态

接下来新建php进行测试： 
确保主从复制打开的情况下，在主库新建数据库，数据表并插入数据。或找个数据表导入进去。

查询和读写分离： 
这时更改从数据库上的表数据53和54分别添加标识

